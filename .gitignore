# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipenv.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Visual Studio Code
.vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
.cursorignore
.cursorindexingignore

# =============================================================================
# PROJECT SPECIFIC - Journal Manuscript Tracker
# =============================================================================

# Configuration files with sensitive information
config.py              # Contains real usernames/passwords - NEVER commit!
config_local.py        # Local configuration overrides
.config                # Hidden config directory

# User data and outputs
data/                  # Personal manuscript data directory
output/                # Generated reports and files
exports/               # Exported data files
manuscripts/           # Downloaded manuscript files
cache/                 # Cached data

# Generated files
*.xlsx                 # Excel export files
*.csv                  # CSV export files  
*.json                # JSON data files (may contain personal info)
*.pickle              # Pickle files
*.pkl                 # Pickle files (alternative extension)

# Session and temporary files
session_*.txt         # Session cookies/tokens
temp_*.txt           # Temporary files
*.tmp                # Generic temporary files
cookies.txt          # Browser cookies
tokens.json          # Authentication tokens

# Logs (additional to standard Python logs)
tracking.log         # Application specific logs
error.log           # Error logs
debug.log           # Debug logs
requests.log        # HTTP request logs

# Browser automation
selenium_logs/      # Selenium WebDriver logs
screenshots/        # Debug screenshots
browser_cache/      # Browser cache files

# Operating System
.DS_Store          # macOS
.DS_Store?         # macOS
._*                # macOS
.Spotlight-V100    # macOS
.Trashes           # macOS
ehthumbs.db        # Windows
Thumbs.db          # Windows
desktop.ini        # Windows

# Backup files
*.bak              # Generic backup files
*.backup           # Backup files
*.old              # Old versions
*~                 # Temporary backup files (vim, emacs)

# Archive files (if created for personal use)
*.zip              # Personal data archives
*.tar.gz           # Personal data archives  
*.rar              # Personal data archives

# Personal notes and documentation
NOTES.md           # Personal development notes  
TODO.md            # Personal todo list
CHANGELOG_PERSONAL.md  # Personal change tracking
